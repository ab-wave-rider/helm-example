{{- $all_secrets := dict -}}
{{- range .Values.imagePullSecrets -}}
{{- if not (hasKey $all_secrets .k8s_secret_name) -}}
{{- $_ := set $all_secrets .k8s_secret_name .aws_secret_name -}}
{{- end -}}
{{- end -}}
{{- range .Values.envSecrets -}}
{{- if not (hasKey $all_secrets .k8s_secret_name) -}}
{{- $_ := set $all_secrets .k8s_secret_name .aws_secret_name -}}
{{- end -}}
{{- end -}}
{{- range .Values.secretInitDeployment.imagePullSecrets -}}
{{- if not (hasKey $all_secrets .k8s_secret_name) -}}
{{- $_ := set $all_secrets .k8s_secret_name .aws_secret_name -}}
{{- end -}}
{{- end -}}

{{- if $all_secrets }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-secret-init
  labels:
    app.kubernetes.io/name: {{ .Values.name }}-secret-init
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.name }}-secret-init
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.name }}-secret-init
    spec:
      serviceAccountName: {{ .Values.name }}
      containers:
      - name: secret-init
        image: {{ .Values.secretInitDeployment.image }}
        command: ["sleep", "365d"]
        resources:
          requests:
            memory: 10Mi
            cpu: 10m
          limits:
            memory: 20Mi
            cpu: 20m
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        {{- range $dict_key, $dict_value := $all_secrets }}
          - name: {{ regexReplaceAll "\\W+" $dict_key "-" }}
            mountPath: "/mnt/{{ $dict_key }}"
            readOnly: true
        {{- end }}
      volumes:
      {{- range $dict_key, $dict_value := $all_secrets }}
        - name: {{ regexReplaceAll "\\W+" $dict_key "-" }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $dict_key }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.secretInitDeployment.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.secretInitDeployment.imagePullSecrets }}
       - name: {{ .k8s_secret_name }}
      {{- end }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
{{- end }}
